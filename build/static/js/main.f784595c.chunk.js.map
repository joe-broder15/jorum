{"version":3,"sources":["utils/axiosApi.js","hooks/GetApiRequest.js","components/Users/UserLink.js","contexts/AuthContext.js","containers/Posts/Post.js","containers/Posts/PostList.js","components/Topics/Topic.js","containers/Topics/TopicList.js","containers/Threads/Thread.js","containers/Threads/ThreadList.js","containers/Topics/TopicDetail.js","containers/Threads/ThreadCreate.js","containers/Threads/ThreadEdit.js","containers/Threads/ThreadDetail.js","containers/Posts/PostCreate.js","containers/Posts/PostDetail.js","containers/Posts/PostEdit.js","containers/Auth/Login.js","containers/Auth/Register.js","containers/Users/UserDetail.js","containers/Users/UserEditBasic.js","containers/Users/UserEditAvatar.js","containers/Users/UserCredentials.js","containers/Users/UserAdminSettings.js","containers/Users/UserEdit.js","containers/Auth/Logout.js","containers/App/AppNavbar.js","containers/Admin/AdminUsers.js","containers/Admin/AdminTopics.js","containers/Admin/AdminCreateTopic.js","containers/Admin/AdminEditTopic.js","containers/Admin/AdminThreads.js","containers/Auth/EmailVerify.js","containers/Auth/VerifyInstructions.js","containers/Auth/ForgotPassword.js","containers/Auth/ResetPassword.js","containers/App/App.js","hooks/LoginHook.js","index.js"],"names":["axiosInstance","axios","create","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","GetApiRequest","url","useState","data","setData","isLoaded","setIsLoaded","error","setError","useEffect","get","then","response","catch","UserLink","props","to","user","AuthContext","React","createContext","Post","useParams","topicId","threadId","useContext","authState","userState","setAuthState","setUserState","JSON","parse","content","contentState","setContentState","Card","Header","Title","Row","Col","className","created_date","slice","sm","username","privilege","id","Button","Body","toolbarHidden","initialContentState","onContentStateChange","readOnly","PostList","message","Container","map","item","Spinner","animation","role","Topic","ListGroup","Item","style","textDecoration","name","nsfw","color","description","TopicList","md","Text","Thread","topic","ThreadList","length","TopicDetail","ThreadCreate","history","useHistory","threadName","setThreadName","threadNsfw","setThreadNsfw","postContent","EditorState","createEmpty","editorState","setEditorState","confirm","setConfirm","push","console","log","convertToRaw","getCurrentContent","Form","onSubmit","event","preventDefault","post","status","alert","Group","Label","Control","value","onChange","target","Check","type","checked","label","padding","minHeight","onEditorStateChange","ThreadEdit","setName","isMounted","useRef","current","refreshState","put","variant","onClick","delete","ThreadDetail","PostCreate","PostDetail","postId","String","title","text","PostEditContainer","PostEdit","Login","email","setEmail","password","setPassword","result","defaults","setItem","Register","setUsername","loading","setLoading","UserDetail","userName","src","avatar","URL","width","height","xs","bio","birthday","gender","UserEditBasic","setAvatar","setBio","setBirthday","setGender","isPrivate","setPrivate","private","as","rows","placeholder","removeItem","UserEditAvatar","preview","setPreview","form_data","FormData","append","editData","File","custom","files","createObjectURL","Image","UserCredentials","UserAdminSettingsBasic","isAdmin","setAdmin","UserEdit","editType","setEditType","Nav","defaultActiveKey","Link","param","renderSwitch","Logout","NavDropdown","evt","AppNavbar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","AdminPosts","AdminTopics","AdminCreateTopic","setDescription","setNsfw","AdminEditTopic","AdminThreads","EmailVerify","challenge","VerifyInstructions","ForgotPassword","success","setSuccess","ResetPassword","App","LoginHook","Provider","basename","exact","path","AdminRoutes","PostRoutes","UserRoutes","match","useRouteMatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f784595c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"http://forum-joe-broder.herokuapp.com/api\",\r\n  timeout: 10000,\r\n  headers: {\r\n    Authorization: \"JWT \" + localStorage.getItem(\"access_token\"),\r\n    \"Content-Type\": \"application/json\",\r\n    accept: \"application/json\",\r\n  },\r\n});\r\nexport default axiosInstance;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axiosInstance from \"../utils/axiosApi\";\r\n\r\nexport default function GetApiRequest(url) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .get(url)\r\n        .then((response) => {\r\n          \r\n          setData(response.data);\r\n          setIsLoaded(true);\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { error, isLoaded, data };\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function UserLink(props) {\r\n  return <Link to={\"/user/\" + props.user}>{props.user}</Link>;\r\n}\r\n","import React from \"react\";\r\nconst AuthContext = React.createContext();\r\nexport default AuthContext;","import React, { useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport {\r\n  EditorState,\r\n  ContentState,\r\n  convertFromHTML,\r\n  CompositeDecorator,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n  getDefaultKeyBinding,\r\n} from \"draft-js\";\r\nimport { Container, Row, Card, Col, Form, Button } from \"react-bootstrap\";\r\nimport \"../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\n\r\nexport default function Post(props) {\r\n  let { topicId, threadId } = useParams();\r\n\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n\r\n  const [contentState, setContentState] = useState(() =>\r\n    JSON.parse(props.data.content)\r\n  );\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title>\r\n          <Row>\r\n            <Col className=\"mr-auto\">\r\n              <i>\r\n                Post by <UserLink user={props.data.user} /> @{\" \"}\r\n                {props.data.created_date.slice(0, 10)}\r\n              </i>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              {userState != null &&\r\n              authState &&\r\n              (userState.username == props.data.user ||\r\n                userState.privilege > 1) ? (\r\n                <Link\r\n                  to={\r\n                    \"/topic/\" +\r\n                    topicId +\r\n                    \"/thread/\" +\r\n                    threadId +\r\n                    \"/post/\" +\r\n                    props.data.id +\r\n                    \"/edit\"\r\n                  }\r\n                >\r\n                  <Button>Edit</Button>\r\n                </Link>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Card.Title>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Editor\r\n          toolbarHidden\r\n          initialContentState={contentState}\r\n          onContentStateChange={setContentState}\r\n          readOnly={true}\r\n        />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport Post from \"./Post\";\r\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nexport default function PostList() {\r\n  // get posts using our GET api hook\r\n  let { topicId, threadId } = useParams();\r\n  const { data, error, isLoaded } = GetApiRequest(\r\n    \"/topic/\" + topicId + \"/thread/\" + threadId + \"/post\"\r\n  );\r\n\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // render a Post for each item\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col>\r\n          {data.map((item) => (\r\n            <Row className=\"justify-content-center\">\r\n              <Col>\r\n                <Post data={item} />\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Badge, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport UserLink from \"../Users/UserLink\";\r\nimport { data } from \"jquery\";\r\n\r\nexport default function Topic(props) {\r\n  return (\r\n    <ListGroup.Item>\r\n      <Link to={\"/topic/\" + props.data.id} style={{ textDecoration: \"none\" }}>\r\n        <h4 >\r\n          {props.data.name} {props.data.nsfw ? (<i>{\"(NSFW)\"}</i>) : \"\"}\r\n        </h4>\r\n        <h6 style={{color:\"gray\"}}>\r\n          <i>{props.data.description}</i>\r\n        </h6>\r\n      </Link>\r\n    </ListGroup.Item>\r\n  );\r\n}\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport Topic from \"../../components/Topics/Topic\";\r\nimport { Container, Row, Col, Spinner, Card, ListGroup } from \"react-bootstrap\";\r\n\r\nexport default function TopicList() {\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\"/topic\");\r\n\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // render a Post for each item\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title>Topics</Card.Title>\r\n                </Card.Header>\r\n\r\n                <Card.Body>\r\n                  <Card.Text>\r\n                    <h5>\r\n                      Welcome to my forum! Log in or register to make threads\r\n                      and post in the following topics.\r\n                    </h5>\r\n                  </Card.Text>\r\n                  <ListGroup>\r\n                    {data.map((item) => (\r\n                      <Topic data={item} />\r\n                    ))}\r\n                  </ListGroup>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  Badge,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\nimport { data } from \"jquery\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\n\r\nexport default function Thread(props) {\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n  return (\r\n    <ListGroup.Item>\r\n      <Card.Title>\r\n        <Row >\r\n          <Col className=\"mr-auto\">\r\n            <Link\r\n              to={\"/topic/\" + props.data.topic + \"/thread/\" + props.data.id}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <h3>\r\n                {props.data.name} {props.data.nsfw ? \"(NSFW)\" : \"\"}\r\n              </h3>\r\n            </Link>\r\n          </Col>\r\n          <Col md={\"auto\"}>\r\n            <Row>\r\n              <i>\r\n                Created by <UserLink user={props.data.user} />\r\n              </i>\r\n            </Row>\r\n            <Row>\r\n              <i>Created on {props.data.created_date.slice(0,10)}</i>\r\n            </Row>\r\n          </Col>\r\n          <Col md={1}>\r\n            {\" \"}\r\n            {authState == true &&\r\n            userState != null &&\r\n            (userState.username == props.data.user || userState.privilege > 1)? (\r\n              <Link\r\n                to={\r\n                  \"/topic/\" +\r\n                  props.data.topic +\r\n                  \"/thread/\" +\r\n                  props.data.id +\r\n                  \"/edit\"\r\n                }\r\n              >\r\n                <Button>Edit</Button>\r\n              </Link>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Card.Title>\r\n    </ListGroup.Item>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport Thread from \"./Thread\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Container, Row, Col, Spinner, Card, ListGroup } from \"react-bootstrap\";\r\n\r\nexport default function ThreadList(props) {\r\n  const topicId = props.topicId;\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\r\n    \"/topic/\" + topicId + \"/thread\"\r\n  );\r\n\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // render a Post for each item\r\n  return (\r\n    <ListGroup>\r\n      {data.length == 0 ? (\r\n        <h4>There are no threads for this topic</h4>\r\n      ) : (\r\n        data.map((item) => <Thread data={item} />)\r\n      )}\r\n    </ListGroup>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport Topic from \"../../components/Topics/Topic\";\r\nimport ThreadList from \"../Threads/ThreadList\";\r\nimport { Container, Row, Col, Spinner, Button, Card } from \"react-bootstrap\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\n\r\nexport default function TopicDetail(props) {\r\n  let { topicId } = useParams();\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\"/topic/\" + topicId);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // render a Post for each item\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"10\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <Row>\r\n                    <Col className=\"mr-auto\">\r\n                      <Card.Title>{data.name}</Card.Title>\r\n                    </Col>\r\n                    <Col sm=\"auto\">\r\n                      {authState && userState != null ? (\r\n                        <Link to={\"/topic/\" + topicId + \"/thread/create\"}>\r\n                          <Button>Create a Thread</Button>\r\n                        </Link>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <ThreadList topicId={topicId} />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { \r\n  EditorState,\r\n  ContentState,\r\n  convertFromHTML,\r\n  CompositeDecorator,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n  getDefaultKeyBinding, } from \"draft-js\";\r\nimport { Container, Row, Card, Col, Form, Button } from \"react-bootstrap\";\r\nimport \"../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nexport default function ThreadCreate(props) {\r\n  let { topicId } = useParams();\r\n  let history = useHistory();\r\n\r\n  // thread\r\n  const [threadName, setThreadName] = useState(\"\");\r\n  const [threadNsfw, setThreadNsfw] = useState(false);\r\n\r\n  //   original post\r\n  const [postContent, setPostContent] = useState(\"\");\r\n  const [editorState, setEditorState] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  //   confirm\r\n  const [confirm, setConfirm] = useState(false);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (threadName == \"\" || postContent == {} || confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/topic/\" + topicId + \"/thread\", {\r\n          postContent: convertToRaw(editorState.getCurrentContent()),\r\n          threadName: threadName,\r\n          threadNsfw: threadNsfw,\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/topic/\"+topicId);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  // redirect if not authenticated\r\n  useEffect(() => {\r\n    if (authState == false) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(convertToRaw(editorState.getCurrentContent()));\r\n  }, [editorState]);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title>Create Thread</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <h3>Thread</h3>\r\n                    <Form.Group>\r\n                      <Form.Label>Thread Name</Form.Label>\r\n                      <Form.Control\r\n                        value={threadName}\r\n                        onChange={(event) => setThreadName(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={threadNsfw}\r\n                      checked={threadNsfw}\r\n                      onChange={(event) => setThreadNsfw(!threadNsfw)}\r\n                      label={\"NSFW\"}\r\n                    />\r\n                    <br />\r\n                    <h3>First Post</h3>\r\n                    <Form.Group>\r\n                      <Form.Label>Content</Form.Label>\r\n                      <div\r\n                        style={{\r\n                          padding: \"2px\",\r\n                          minHeight: \"400px\",\r\n                        }}\r\n                      >\r\n                        <Editor\r\n                          editorState={editorState}\r\n                          onEditorStateChange={setEditorState}\r\n                        />\r\n                      </div>\r\n                      \r\n                    </Form.Group>\r\n                    <br />\r\n\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={confirm}\r\n                      checked={confirm}\r\n                      onChange={(event) => setConfirm(!confirm)}\r\n                      label={\"Confirm\"}\r\n                    />\r\n                    <br />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\nexport default function ThreadEdit(props) {\r\n  let { topicId, threadId } = useParams();\r\n  let history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(false);\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n  const { data, error, isLoaded } = GetApiRequest(\"/topic/\" + topicId + \"/thread/\" + threadId);\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      if (data.user != userState.username && userState.privilege <= 1) {\r\n        history.push(\"/\");\r\n      }\r\n      setName(data.name);\r\n    }\r\n  };\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    refreshState();\r\n  }, [isLoaded]);\r\n\r\n  // handles edit\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (name == \"\" || confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const editData = () => {\r\n      axiosInstance\r\n        .put(\"/topic/\" + topicId + \"/thread/\" + threadId, {\r\n          name:name\r\n        })\r\n        .then((response) => {\r\n          // setIsLoaded(true);\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/topic/\"+topicId);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // handles delete\r\n  const handleDelete = () => {\r\n    const deleteData = () => {\r\n      axiosInstance\r\n        .delete(\"/topic/\" + topicId + \"/thread/\" + threadId)\r\n        .then((response) => {\r\n          // setIsLoaded(true);\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/topic/\"+topicId);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    deleteData();\r\n  };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Edit Thread</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Thread Name</Form.Label>\r\n                      <Form.Control\r\n                        value={name}\r\n                        onChange={(event) => setName(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br/>\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={confirm}\r\n                      checked={confirm}\r\n                      onChange={(event) => setConfirm(!confirm)}\r\n                      label={\"Confirm\"}\r\n                    />\r\n                    <br />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                  <Button variant=\"warning\" onClick={refreshState}>\r\n                    Reset\r\n                  </Button>\r\n                  <Button variant=\"danger\" onClick={handleDelete}>\r\n                    Delete\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport Topic from \"../../components/Topics/Topic\";\r\nimport ThreadList from \"../Threads/ThreadList\";\r\nimport { Container, Row, Col, Spinner, Button, Card } from \"react-bootstrap\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport PostList from \"../Posts/PostList\";\r\n\r\nexport default function ThreadDetail(props) {\r\n  let { topicId, threadId } = useParams();\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\r\n    \"/topic/\" + topicId + \"/thread/\" + threadId\r\n  );\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // render a Post for each item\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"10\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title>\r\n                    <Row>\r\n                      <Col className=\"mr-auto\">{data.name}</Col>\r\n                      <Col sm=\"auto\">\r\n                        {userState!=null && authState ? (\r\n                          <Link\r\n                            to={\r\n                              \"/topic/\" +\r\n                              topicId +\r\n                              \"/thread/\" +\r\n                              threadId +\r\n                              \"/post/create\"\r\n                            }\r\n                          >\r\n                            <Button>Make a Post</Button>\r\n                          </Link>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <PostList />\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport {\r\n  EditorState,\r\n  ContentState,\r\n  convertFromHTML,\r\n  CompositeDecorator,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n  getDefaultKeyBinding,\r\n} from \"draft-js\";\r\nimport { Container, Row, Card, Col, Form, Button } from \"react-bootstrap\";\r\nimport \"../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nexport default function PostCreate(props) {\r\n  let { topicId, threadId } = useParams();\r\n  let history = useHistory();\r\n\r\n  const [editorState, setEditorState] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n\r\n  //   confirm\r\n  const [confirm, setConfirm] = useState(false);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/topic/\" + topicId + \"/thread/\" + threadId + \"/post\", {\r\n          content: convertToRaw(editorState.getCurrentContent()),\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 201) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/topic/\"+topicId+\"/thread/\"+threadId);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  // redirect if not authenticated\r\n  useEffect(() => {\r\n    if (authState == false) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(convertToRaw(editorState.getCurrentContent()));\r\n  }, [editorState]);\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title>Create a Post</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <div\r\n                      style={{\r\n                        padding: \"2px\",\r\n                        minHeight: \"400px\",\r\n                      }}\r\n                    >\r\n                      <Editor\r\n                        editorState={editorState}\r\n                        onEditorStateChange={setEditorState}\r\n                      />\r\n                    </div>\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={confirm}\r\n                      checked={confirm}\r\n                      onChange={(event) => setConfirm(!confirm)}\r\n                      label={\"Confirm\"}\r\n                    />\r\n                    <br />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroup,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\nexport default function PostDetail(props) {\r\n  let { postId } = useParams();\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\"/post/\" + String(postId));\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // display information about a post\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Viewing Post {data.id}</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col sm=\"2\">\r\n                          <b>Title:</b>\r\n                        </Col>\r\n                        <Col>{data.title}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col sm=\"2\">\r\n                          <b>Description:</b>\r\n                        </Col>\r\n                        <Col>{data.text}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col sm=\"2\">\r\n                          <b>Created at:</b>\r\n                        </Col>\r\n                        <Col>{data.created_date}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col sm=\"2\">\r\n                          <b>Author:</b>\r\n                        </Col>\r\n                        <Col>\r\n                          <UserLink user={data.user} />\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Card.Body>\r\n              </Card>\r\n              <br />\r\n              {authState &&\r\n              userState != null &&\r\n              (userState.username == data.user || userState.privilege > 1) ? (\r\n                // if logged in link to the edit page\r\n                <Row>\r\n                  <Col sm=\"2\">\r\n                    <Link to={\"/post/\" + String(postId) + \"/edit\"}>\r\n                      <Button>Edit</Button>\r\n                    </Link>\r\n                  </Col>\r\n                </Row>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport {\r\n  EditorState,\r\n  ContentState,\r\n  convertFromHTML,\r\n  CompositeDecorator,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n  getDefaultKeyBinding,\r\n} from \"draft-js\";\r\nimport \"../../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nfunction PostEditContainer(props) {\r\n  let { topicId, threadId, postId } = useParams();\r\n  let history = useHistory();\r\n  const [confirm, setConfirm] = useState(false);\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n\r\n  const [contentState, setContentState] = useState(() =>\r\n    JSON.parse(props.data.content)\r\n  );\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    if (\r\n      userState == null ||\r\n      (props.data.user != userState.username && userState.privilege <= 1)\r\n    ) {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  // handles edit\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const editData = () => {\r\n      axiosInstance\r\n        .put(\"/topic/\" + topicId + \"/thread/\" + threadId + \"/post/\" + postId, {\r\n          content: contentState,\r\n        })\r\n        .then((response) => {\r\n          // setIsLoaded(true);\r\n          if (response.status == 201) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/topic/\" + topicId + \"/thread/\" + threadId);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // handles delete\r\n  const handleDelete = () => {\r\n    const deleteData = () => {\r\n      axiosInstance\r\n        .delete(\"/topic/\" + topicId + \"/thread/\" + threadId + \"/post/\" + postId)\r\n        .then((response) => {\r\n          // setIsLoaded(true);\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/topic/\" + topicId + \"/thread/\" + threadId);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    deleteData();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {console.log(contentState)}\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Edit Post</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Editor\r\n                      initialContentState={contentState}\r\n                      onContentStateChange={setContentState}\r\n                    />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={confirm}\r\n                      checked={confirm}\r\n                      onChange={(event) => setConfirm(!confirm)}\r\n                      label={\"Confirm\"}\r\n                    />\r\n                    <br />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                  <Button variant=\"danger\" onClick={handleDelete}>\r\n                    Delete\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// fetch data and render and editor\r\nexport default function PostEdit(props) {\r\n  let { topicId, threadId, postId } = useParams();\r\n  const { data, error, isLoaded } = GetApiRequest(\r\n    \"/topic/\" + topicId + \"/thread/\" + threadId + \"/post/\" + postId\r\n  );\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return <PostEditContainer data={data} />;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Container, Row, Card, Col, Form, Button } from \"react-bootstrap\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\n\r\nexport default function Login() {\r\n  let history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { authState, setAuthState } = React.useContext(AuthContext);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (email == \"\" || password == \"\") {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/auth/token\", {\r\n          email: email,\r\n          password: password,\r\n        })\r\n        .then((result) => {\r\n          if (result.status == 202) {\r\n            axiosInstance.defaults.headers[\"Authorization\"] =\r\n              \"JWT \" + result.data;\r\n            localStorage.setItem(\"access_token\", result.data);\r\n\r\n            // set global authentication state after a login succeeds, then redirect\r\n            setAuthState(true);\r\n            history.push(\"/\");\r\n          } else {\r\n            alert(result);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status == 401) {\r\n            history.push(\"/verify/instructions\");\r\n          } else {\r\n            alert(error);\r\n          }\r\n        });\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Login</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Email</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Link to=\"/forgotpassword\">Forgot Password</Link>\r\n                    <br />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport Feedback from \"react-bootstrap/esm/Feedback\";\r\n\r\nexport default function Register(props) {\r\n  let history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (\r\n      email == \"\" ||\r\n      password == \"\" ||\r\n      password != confirm ||\r\n      username == \"\"\r\n    ) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/auth/user\", {\r\n          username: username,\r\n          email: email,\r\n          password: password,\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 201) {\r\n            alert(\"success\");\r\n            history.push(\"/verify/instructions\");\r\n          } else {\r\n            alert(response);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n          setLoading(false);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n    setLoading(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Register</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Email</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Username</Form.Label>\r\n                      <Form.Control\r\n                        value={username}\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Confirm Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={confirm}\r\n                        onChange={(event) => setConfirm(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                    ) : (\r\n                      <Button type=\"submit\">Submit</Button>\r\n                    )}\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroup,\r\n  Button,\r\n  Spinner,\r\n  Jumbotron,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport default function UserDetail(props) {\r\n  let { userName } = useParams();\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\"/user/\" + String(userName));\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // display information about a post\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col md=\"8\">\r\n          <Row>\r\n            <Col md=\"auto\">\r\n              <img\r\n                src={\r\n                  data.avatar == null\r\n                    ? \"/default_avatar.jpg\"\r\n                    : new URL(\r\n                        data.avatar\r\n                      )\r\n                }\r\n                style={{\r\n                  width: \"120px\",\r\n                  height: \"120px\",\r\n                  padding: \"0px\",\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"auto\">\r\n              <h1>{data.username}</h1>\r\n              <p>{data.name}</p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card>\r\n            <Card.Header>\r\n              <Row className=\"justify-content-between\">\r\n                <Col xs=\"auto\">Information</Col>\r\n                <Col xs=\"auto\">\r\n                  {authState &&\r\n                  userState != null &&\r\n                  (data.username == userState.username ||\r\n                    userState.privilege > 1) ? (\r\n                    <Link to={\"/user/\" + userName + \"/edit\"}>\r\n                      <Button>Edit</Button>\r\n                    </Link>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Username:</b>\r\n                    </Col>\r\n                    <Col>{data.username}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Name:</b>\r\n                    </Col>\r\n                    <Col>{data.name}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Bio:</b>\r\n                    </Col>\r\n                    <Col>{data.bio}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Birthday:</b>\r\n                    </Col>\r\n                    <Col>{data.birthday}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Gender:</b>\r\n                    </Col>\r\n                    <Col>{data.gender}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card.Body>\r\n          </Card>\r\n          <br />\r\n\r\n          \r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\nexport default function UserEditBasic(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [birthday, setBirthday] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isPrivate, setPrivate] = useState(false);\r\n\r\n  const [confirm, setConfirm] = useState(false);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const { data, error, isLoaded } = GetApiRequest(\"/user/\" + String(userName));\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      setAvatar(data.avatar);\r\n      setBio(data.bio);\r\n      setBirthday(data.birthday);\r\n      setGender(data.gender);\r\n      setName(data.name);\r\n      setPrivate(data.private);\r\n    }\r\n  };\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    refreshState();\r\n  }, [isLoaded]);\r\n\r\n  // handles edit\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (bio == \"\" || name == \"\" || confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n    const editData = () => {\r\n      axiosInstance\r\n        .put(\"/user/\" + userName, {\r\n          username: userName,\r\n          name: name,\r\n          bio: bio,\r\n          gender: gender,\r\n          private: isPrivate,\r\n          birthday: String(birthday),\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/user/\" + data.username);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // handles delete\r\n  const handleDelete = () => {\r\n    const deleteData = () => {\r\n      axiosInstance\r\n        .delete(\"/user/\" + userName)\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            localStorage.removeItem(\"access_token\");\r\n            setAuthState(false);\r\n            setUserState(null);\r\n            alert(\"account deleted\");\r\n            history.push(\"/\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    deleteData();\r\n  };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <h2>Edit Profile</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={(event) => handleSubmit(event)}>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              value={name}\r\n              onChange={(event) => setName(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Label>Bio</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"9\"\r\n              value={bio}\r\n              onChange={(event) => setBio(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Label>Gender</Form.Label>\r\n            <Form.Control\r\n              value={gender}\r\n              onChange={(event) => setGender(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              value={isPrivate}\r\n              checked={isPrivate}\r\n              onChange={(event) => setPrivate(!isPrivate)}\r\n              label={\"Private\"}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Label>Birthday</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              placeholder=\"Date of Birth\"\r\n              value={birthday}\r\n              onChange={(event) => setBirthday(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            value={confirm}\r\n            checked={confirm}\r\n            onChange={(event) => setConfirm(!confirm)}\r\n            label={\"Confirm\"}\r\n          />\r\n          <br />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n        <Button variant=\"warning\" onClick={refreshState}>\r\n          Clear Changes\r\n        </Button>\r\n        <br />\r\n        <Button variant=\"danger\" onClick={handleDelete}>\r\n          Delete Account\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\nexport default function UserEditAvatar(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [preview, setPreview] = useState(\"\");\r\n\r\n  const { data, error, isLoaded } = GetApiRequest(\"/user/\" + String(userName));\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  //   used to refresh state\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      setAvatar(data.avatar);\r\n    }\r\n  };\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    refreshState();\r\n  }, [isLoaded]);\r\n\r\n  // handles upload\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (avatar == \"\") {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n    const editData = () => {\r\n      let form_data = new FormData();\r\n      form_data.append(\"file\", avatar);\r\n      form_data.append(\"filename\", avatar.name);\r\n      axiosInstance\r\n        .post(\"/upload/avatar/\" + userName, form_data)\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/user/\" + data.username);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <h2>Edit Avatar</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={(event) => handleSubmit(event)}>\r\n          <Form>\r\n            <Form.File\r\n              id=\"custom-file\"\r\n              label=\"Upload a new avatar\"\r\n              custom\r\n              onChange={(event) => {\r\n                setAvatar(event.target.files[0]);\r\n                setPreview(URL.createObjectURL(event.target.files[0]));\r\n              }}\r\n            />\r\n          </Form>\r\n          <Image\r\n            src={preview}\r\n            style={{\r\n              width: \"120px\",\r\n              height: \"120px\",\r\n              padding: \"0px\",\r\n            }}\r\n          />\r\n          <br />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n  ListGroup\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\nexport default function UserCredentials(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n\r\n  const { data, error, isLoaded } = GetApiRequest(\"/auth/user/\"+userName);\r\n  //   const isMounted = useRef(1);\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <h2>Edit Credentials</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item>\r\n            <Row>\r\n              <Col sm=\"3\">\r\n                <b>Username:</b>\r\n              </Col>\r\n              <Col>{data.username}</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n\r\n          <ListGroup.Item>\r\n            <Row>\r\n              <Col sm=\"3\">\r\n                <b>Email:</b>\r\n              </Col>\r\n              <Col>{data.email}</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            <Row>\r\n              <Col sm=\"3\">\r\n                <b>Privilege:</b>\r\n              </Col>\r\n              <Col>{ + data.privilege}</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n        <Link to=\"/forgotpassword\">Reset Password</Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\nexport default function UserAdminSettingsBasic(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n  const [isAdmin, setAdmin] = useState(false);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const { data, error, isLoaded } = GetApiRequest(\"/auth/user/\" + userName);\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      setAdmin(data.privilege > 1);\r\n    }\r\n  };\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    refreshState();\r\n  }, [isLoaded]);\r\n\r\n  // handles edit\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const editData = () => {\r\n      axiosInstance\r\n        .put(\"auth/user/privilege/\" + userName, {\r\n          privilege: isAdmin ? 2 : 1,\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/user/\" + data.username);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <h2>Edit Profile</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={(event) => handleSubmit(event)}>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            value={isAdmin}\r\n            checked={isAdmin}\r\n            onChange={(event) => setAdmin(!isAdmin)}\r\n            label={\"Administrator\"}\r\n          />\r\n          <br />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n        <Button variant=\"warning\" onClick={refreshState}>\r\n          Clear Changes\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport UserEditBasic from \"./UserEditBasic\";\r\nimport UserEditAvatar from \"./UserEditAvatar\";\r\nimport UserCredentials from \"./UserCredentials\";\r\nimport UserAdminSettings from \"./UserAdminSettings\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  ListGroup,\r\n  Button,\r\n  Spinner,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function UserEdit(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n  const { authState, userState } = React.useContext(AuthContext);\r\n\r\n  let [editType, setEditType] = useState(1);\r\n\r\n  function renderSwitch(param) {\r\n    switch (editType) {\r\n      case 1:\r\n        return <UserEditBasic />;\r\n      case 2:\r\n        return <UserCredentials />;\r\n      case 3:\r\n        return <UserEditAvatar />;\r\n      case 4:\r\n        return <UserAdminSettings />;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !authState ||\r\n      userState == null ||\r\n      (userName != userState.username && userState.privilege <= 1)\r\n    ) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <Row>\r\n                <Col md=\"2\">\r\n                  <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                    <Nav.Link onClick={() => setEditType(1)}>Profile</Nav.Link>\r\n                    <Nav.Link onClick={() => setEditType(2)}>\r\n                      Credentials\r\n                    </Nav.Link>\r\n                    <Nav.Link onClick={() => setEditType(3)}>Avatar</Nav.Link>\r\n                    {userState != null && userState.privilege > 1 ? (\r\n                      <Nav.Link onClick={() => setEditType(4)}>Admin</Nav.Link>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Nav>\r\n                </Col>\r\n                <Col>{renderSwitch(editType)}</Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {NavDropdown} from \"react-bootstrap\";\r\nexport default function Logout() {\r\n  const history = useHistory();\r\n  const { authState, setAuthState, userState, setUserState } = React.useContext(\r\n    AuthContext\r\n  );\r\n  const handleSubmit = (evt) => {\r\n    const logout = () => {\r\n      axiosInstance\r\n        .delete(\"/auth/token\")\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            // remode local token and reset auth contexts if logout succeeds\r\n            localStorage.removeItem(\"access_token\");\r\n            setAuthState(false);\r\n            setUserState(null);\r\n            alert(\"logged out\");\r\n            history.push(\"/\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    logout();\r\n  };\r\n\r\n  return <NavDropdown.Item onClick={handleSubmit}>Logout</NavDropdown.Item>;\r\n}\r\n","// navbar component\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\n\r\nimport Logout from \"../Auth/Logout\";\r\n\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\n\r\nexport default function AppNavbar() {\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" style={{ padding: \"5px\" }}>\r\n      <Navbar.Brand href=\"/\">Forum</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse\r\n        id=\"responsive-navbar-nav\"\r\n        className=\"justify-content-between\"\r\n      >\r\n        <Nav className=\"mr-auto\"></Nav>\r\n        <Nav>\r\n          {/* login controls */}\r\n          {authState && userState != null ? (\r\n            <NavDropdown\r\n              title={\"my profile\"}\r\n              id=\"collasible-nav-dropdown\"\r\n            >\r\n              <NavDropdown.Item>\r\n                <UserLink user={userState.username} />\r\n              </NavDropdown.Item>\r\n\r\n              {/* admin controls */}\r\n              {userState.privilege > 1 ? (\r\n                <Fragment>\r\n                  <NavDropdown.Item>\r\n                    <Link to=\"/admin/users\">Users</Link>\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item>\r\n                    <Link to=\"/admin/topics\">Topics</Link>\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item>\r\n                    <Link to=\"/admin/threads\">Threads</Link>\r\n                  </NavDropdown.Item>\r\n                </Fragment>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Logout />\r\n            </NavDropdown>\r\n          ) : (\r\n            <Fragment>\r\n              <Nav.Link>\r\n                <Link to=\"/login\">Login</Link>\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                <Link to=\"/register\">Register</Link>\r\n              </Nav.Link>\r\n            </Fragment>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","// admin only list of all registered users\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { Container, Row, Card, Col, Spinner, ListGroup } from \"react-bootstrap\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\n\r\nexport default function AdminPosts(props) {\r\n  let history = useHistory();\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const isMounted = useRef(1);\r\n\r\n  // get all users from api\r\n  const { data, error, isLoaded } = GetApiRequest(\"/user\");\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null || userState.privilege <= 1) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n  \r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Admin Users</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  {data.length == 0 ? (\r\n                    <h4>This user hasn't made any posts yet...</h4>\r\n                  ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col sm=\"3\">\r\n                            <b>Username</b>\r\n                          </Col>\r\n                          <Col sm=\"3\">\r\n                            <b>Name</b>\r\n                          </Col>\r\n                          <Col sm=\"3\">\r\n                            <b>Birthday</b>\r\n                          </Col>\r\n                          <Col sm=\"3\">\r\n                            <b>Gender</b>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      {data.map((item) => (\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col sm=\"3\">\r\n                              <UserLink user={item.username} />\r\n                            </Col>\r\n                            <Col sm=\"3\">{item.name}</Col>\r\n                            <Col sm=\"3\">{item.gender}</Col>\r\n                            <Col sm=\"3\">{item.birthday}</Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","// admin only list of all posts\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { Container, Row, Card, Col, Spinner, ListGroup } from \"react-bootstrap\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function AdminTopics(props) {\r\n  let history = useHistory();\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const isMounted = useRef(1);\r\n\r\n  // get posts from api\r\n  const { data, error, isLoaded } = GetApiRequest(\"/topic\");\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null || userState.privilege <= 1) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Admin Topics</h1>\r\n              <Link to=\"/admin/topics/create\"><Button>Add</Button></Link>\r\n              <br/>\r\n              <Card>\r\n                <Card.Body>\r\n                  {data.length == 0 ? (\r\n                    <h4>There are currently no topics</h4>\r\n                  ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col sm=\"4\">\r\n                            <b>Name</b>\r\n                          </Col>\r\n                          <Col sm=\"4\">\r\n                            <b>Description</b>\r\n                          </Col>\r\n                          <Col sm=\"2\">\r\n                            <b>NSFW</b>\r\n                          </Col>\r\n                          <Col sm=\"1\">\r\n                            <b>Id</b>\r\n                          </Col>\r\n                          <Col sm=\"1\">\r\n                            \r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      {data.map((item) => (\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col sm=\"4\">{item.name}</Col>\r\n                            <Col sm=\"4\">{item.description}</Col>\r\n                            <Col sm=\"2\">{String(item.nsfw)}</Col>\r\n                            <Col sm=\"1\">{item.id}</Col>\r\n                            <Col sm=\"1\"><Link to={\"/admin/topics/edit/\"+item.id}><Button>Edit</Button></Link></Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Container, Row, Card, Col, Form, Button } from \"react-bootstrap\";\r\n\r\nexport default function AdminCreateTopic() {\r\n  let history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [nsfw, setNsfw] = useState(false);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (name == \"\" || description == \"\" || confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/topic\", {\r\n          name: name,\r\n          description: description,\r\n          nsfw: nsfw\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 201) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/admin/topics\");\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  // redirect if not authenticated\r\n  useEffect(() => {\r\n    if (!authState || userState == null || userState.privilege <= 1) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Admin Create Topic</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Topic Name</Form.Label>\r\n                      <Form.Control\r\n                        value={name}\r\n                        onChange={(event) => setName(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Description</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"9\"\r\n                        value={description}\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={nsfw}\r\n                      checked={nsfw}\r\n                      onChange={(event) => setNsfw(!nsfw)}\r\n                      label={\"NSFW\"}\r\n                    />\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={confirm}\r\n                      checked={confirm}\r\n                      onChange={(event) => setConfirm(!confirm)}\r\n                      label={\"Confirm\"}\r\n                    />\r\n\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\nexport default function AdminEditTopic(props) {\r\n  let { topicId } = useParams();\r\n  let history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [nsfw, setNsfw] = useState(false);\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n  const { data, error, isLoaded } = GetApiRequest(\"/topic/\" + String(topicId));\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null || userState.privilege <= 1) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      if (data.user != userState.username && userState.privilege <= 1) {\r\n        history.push(\"/\");\r\n      }\r\n      setName(data.name);\r\n      setDescription(data.description);\r\n      setNsfw(data.nsfw);\r\n    }\r\n  };\r\n\r\n    // set initial state when data loads\r\n    useEffect(() => {\r\n      refreshState();\r\n    }, [isLoaded]);\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        if (name == \"\" || description == \"\" || confirm == false) {\r\n          alert(\"please do not leave any fields blank\");\r\n          return;\r\n        }\r\n    \r\n        const editData = () => {\r\n          axiosInstance\r\n            .put(\"/topic/\"+data.id, {\r\n              name: name,\r\n              description: description,\r\n              nsfw: nsfw\r\n            })\r\n            .then((response) => {\r\n              if (response.status == 201) {\r\n                alert(\"success\");\r\n              } else {\r\n                alert(\"fail\");\r\n              }\r\n              history.push(\"/\");\r\n            })\r\n            .catch((error) => {\r\n              alert(error);\r\n            });\r\n        };\r\n        editData();\r\n      };\r\n\r\n    // handles delete\r\n    const handleDelete = () => {\r\n      const deleteData = () => {\r\n        axiosInstance\r\n          .delete(\"/topic/\" + data.id)\r\n          .then((response) => {\r\n            if (response.status == 200) {\r\n              alert(\"success\");\r\n            } else {\r\n              alert(\"fail\");\r\n            }\r\n            history.push(\"/admin/topics\");\r\n          })\r\n          .catch((error) => {\r\n            alert(error);\r\n          });\r\n      };\r\n      deleteData();\r\n    };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Edit Topic {data.id}</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                  <Form.Group>\r\n                      <Form.Label>Topic Name</Form.Label>\r\n                      <Form.Control\r\n                        value={name}\r\n                        onChange={(event) => setName(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Description</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"9\"\r\n                        value={description}\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={nsfw}\r\n                      checked={nsfw}\r\n                      onChange={(event) => setNsfw(!nsfw)}\r\n                      label={\"NSFW\"}\r\n                    />\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={confirm}\r\n                      checked={confirm}\r\n                      onChange={(event) => setConfirm(!confirm)}\r\n                      label={\"Confirm\"}\r\n                    />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                  <Button variant=\"warning\" onClick={refreshState}>\r\n                    Reset\r\n                  </Button>\r\n                  <Button variant=\"danger\" onClick={handleDelete}>\r\n                    Delete\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","// admin only list of all posts\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { Container, Row, Card, Col, Spinner, ListGroup } from \"react-bootstrap\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function AdminThreads(props) {\r\n  let history = useHistory();\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const isMounted = useRef(1);\r\n\r\n  // get posts from api\r\n  const { data, error, isLoaded } = GetApiRequest(\"/thread\");\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null || userState.privilege <= 1) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Admin Threads</h1>\r\n              <br />\r\n              <Card>\r\n                <Card.Body>\r\n                  {data.length == 0 ? (\r\n                    <h4>There are currently no topics</h4>\r\n                  ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col sm=\"6\">\r\n                            <b>Name</b>\r\n                          </Col>\r\n                          <Col sm=\"1\">\r\n                            <b>Id</b>\r\n                          </Col>\r\n                          <Col sm=\"2\">\r\n                            <b>Date</b>\r\n                          </Col>\r\n                          <Col sm=\"2\">\r\n                            <b>Author</b>\r\n                          </Col>\r\n                          <Col sm=\"1\"></Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      {data.map((item) => (\r\n                        <ListGroup.Item>\r\n                          {console.log(item)}\r\n                          <Row>\r\n                            <Col sm=\"6\">{item.name}</Col>\r\n                            <Col sm=\"1\">{item.id}</Col>\r\n                            <Col sm=\"2\">{item.created_date}</Col>\r\n                            <Col sm=\"2\">{item.user}</Col>\r\n                            <Col sm=\"1\">\r\n                              <Link to={\"/topic/\"+item.topic+\"/thread/\"+item.id+\"/edit\"}>\r\n                                <Button>Edit</Button>\r\n                              </Link>\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","// the page linked in a verification email\r\nimport React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Spinner,\r\n  Form,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport default function EmailVerify(props) {\r\n  let { challenge } = useParams();\r\n\r\n  // verify email with the current route\r\n  const { data, error, isLoaded } = GetApiRequest(\"/auth/verify/\" + challenge);\r\n\r\n  if (error !== null) {\r\n    return <div>Verification failed: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Success</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  Your email has been sucesfully verified, you may log in\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { Container, Row, Card, Col, Spinner } from \"react-bootstrap\";\r\nexport default function VerifyInstructions() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Verification Required</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  A verification link has been sent to the email you signed up\r\n                  with, check your inbox.\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","// used to send a password reset email\r\nimport React, { useState } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function ForgotPassword() {\r\n  let history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (email == \"\") {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/auth/requestreset\", {\r\n          email: email,\r\n        })\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            setSuccess(true);\r\n          } else {\r\n            alert(result);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status == 401) {\r\n            history.push(\"/verify/instructions\");\r\n          } else {\r\n            alert(error);\r\n          }\r\n          setLoading(false);\r\n        });\r\n    };\r\n    fetchData();\r\n    setLoading(true);\r\n  };\r\n\r\n  if (success) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col md=\"8\">\r\n                <h1>Reset Request Sent</h1>\r\n                <Card>\r\n                  <Card.Body>\r\n                    A password reset link has been sent to the email you signed\r\n                    up with, check your inbox.\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Forgot Password</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Enter your email</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                    ) : (\r\n                      <Button type=\"submit\">Submit</Button>\r\n                    )}\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function ResetPassword(props) {\r\n  let { challenge } = useParams();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (password == \"\" || password != confirm) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/auth/reset/\" + challenge, {\r\n          password: password,\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            setSuccess(true);\r\n          } else {\r\n            alert(response);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n          setLoading(false);\r\n        });\r\n    };\r\n    fetchData();\r\n    setLoading(true);\r\n  };\r\n  if (success) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col md=\"8\">\r\n                <h1>Reset Succeeded</h1>\r\n                <Card>\r\n                  <Card.Body>\r\n                    Your Password has been changed, you may now log in.\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Reset Password</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Confirm Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={confirm}\r\n                        onChange={(event) => setConfirm(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                    ) : (\r\n                      <Button type=\"submit\">Submit</Button>\r\n                    )}\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\n\r\nimport PostList from \"../Posts/PostList\";\r\nimport TopicList from \"../Topics/TopicList\";\r\nimport TopicDetail from \"../Topics/TopicDetail\";\r\nimport ThreadCreate from \"../Threads/ThreadCreate\";\r\nimport ThreadEdit from \"../Threads/ThreadEdit\";\r\nimport ThreadDetail from \"../Threads/ThreadDetail\";\r\nimport PostCreate from \"../Posts/PostCreate\";\r\nimport PostDetail from \"../Posts/PostDetail\";\r\nimport PostEdit from \"../Posts/PostEdit\";\r\nimport Login from \"../Auth/Login\";\r\nimport Register from \"../Auth/Register\";\r\nimport UserDetail from \"../Users/UserDetail\";\r\nimport UserEdit from \"../Users/UserEdit\";\r\nimport AppNavbar from \"./AppNavbar\";\r\nimport LoginHook from \"../../hooks/LoginHook\";\r\nimport AdminUsers from \"../Admin/AdminUsers\";\r\nimport AdminTopics from \"../Admin/AdminTopics\";\r\nimport AdminCreateTopic from \"../Admin/AdminCreateTopic\";\r\nimport AdminEditTopic from \"../Admin/AdminEditTopic\";\r\nimport AdminThreads from \"../Admin/AdminThreads\";\r\nimport EmailVerify from \"../Auth/EmailVerify\";\r\nimport VerifyInstructions from \"../Auth/VerifyInstructions\";\r\n\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport ForgotPassword from \"../Auth/ForgotPassword\";\r\nimport ResetPassword from \"../Auth/ResetPassword\";\r\n\r\nexport default function App() {\r\n  const [authState, setAuthState] = useState(false);\r\n  const [userState, setUserState] = useState(null);\r\n\r\n  // check if a token exists in memory, if so log in\r\n  LoginHook(authState, setAuthState, userState, setUserState);\r\n\r\n  return (\r\n    // set up contexts\r\n    <AuthContext.Provider\r\n      value={{ authState, setAuthState, userState, setUserState }}\r\n    >\r\n      {/* routes */}\r\n      <Router basename=\"/\">\r\n        <AppNavbar />\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <TopicList />\r\n            </Route>\r\n            <Route path=\"/topic/:topicId/thread/:threadId/post/:postId/edit\">\r\n              <PostEdit />\r\n            </Route>\r\n            <Route path=\"/topic/:topicId/thread/:threadId/post/create\">\r\n              <PostCreate />\r\n            </Route>\r\n            <Route path=\"/topic/:topicId/thread/:threadId/edit\">\r\n              <ThreadEdit />\r\n            </Route>\r\n            <Route path=\"/topic/:topicId/thread/create\">\r\n              <ThreadCreate />\r\n            </Route>\r\n            <Route path=\"/topic/:topicId/thread/:threadId\">\r\n              <ThreadDetail />\r\n            </Route>\r\n            \r\n            <Route path=\"/topic/:topicId\">\r\n              <TopicDetail />\r\n            </Route>\r\n\r\n            <Route path=\"/reset/:challenge\">\r\n              <ResetPassword />\r\n            </Route>\r\n            <Route path=\"/verify/instructions\">\r\n              <VerifyInstructions />\r\n            </Route>\r\n            <Route path=\"/verify/confirm/:challenge\">\r\n              <EmailVerify />\r\n            </Route>\r\n            <Route path=\"/admin\">\r\n              <AdminRoutes />\r\n            </Route>\r\n            <Route path=\"/post\">\r\n              <PostRoutes />\r\n            </Route>\r\n            <Route path=\"/user\">\r\n              <UserRoutes />\r\n            </Route>\r\n            <Route path=\"/create\">\r\n              <PostCreate />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <Register />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/forgotpassword\">\r\n              <ForgotPassword />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n// sub routes for posts\r\nfunction PostRoutes() {\r\n  let match = useRouteMatch();\r\n  let { id } = useParams();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/:postId/edit`}>\r\n        <PostEdit />\r\n      </Route>\r\n      <Route path={`${match.path}/:postId`}>\r\n        <PostDetail />\r\n      </Route>\r\n\r\n      <Route path={match.path}></Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n// sub routes for users\r\nfunction UserRoutes() {\r\n  let match = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/:userName/edit`}>\r\n        <UserEdit />\r\n      </Route>\r\n      <Route path={`${match.path}/:userName`}>\r\n        <UserDetail />\r\n      </Route>\r\n      <Route path={match.path}>g</Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n// sub routes for admins\r\nfunction AdminRoutes() {\r\n  let match = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/users`}>\r\n        <AdminUsers />\r\n      </Route>\r\n      <Route path={`${match.path}/topics/create`}>\r\n        <AdminCreateTopic />\r\n      </Route>\r\n      <Route path={`${match.path}/topics/edit/:topicId`}>\r\n        <AdminEditTopic />\r\n      </Route>\r\n      <Route path={`${match.path}/topics`}>\r\n        <AdminTopics />\r\n      </Route>\r\n      <Route path={`${match.path}/threads`}>\r\n        <AdminThreads />\r\n      </Route>\r\n\r\n      <Route path={match.path}>g</Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axiosInstance from \"../utils/axiosApi\";\r\n\r\nexport default function TryLogin(authState, setAuthState, userState, setUserState) {\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .get(\"/auth/user\")\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            setAuthState(true);\r\n            setUserState(response.data);\r\n            console.log(response.data)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n        });\r\n    };\r\n    if (localStorage.getItem(\"access_token\") === null || (authState == true && userState!=null)) {\r\n      return;\r\n    }\r\n    fetchData();\r\n  }, [authState, userState]);\r\n\r\n  return [error];\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/index.css';\r\nimport App from './containers/App/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}