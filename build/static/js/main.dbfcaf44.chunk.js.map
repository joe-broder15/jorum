{"version":3,"sources":["utils/axiosApi.js","hooks/GetApiRequest.js","components/Users/UserLink.js","contexts/AuthContext.js","containers/Posts/PostCreate.js","containers/Posts/PostDetail.js","containers/Posts/PostEdit.js","containers/Auth/Login.js","containers/Auth/Register.js","containers/Users/UserPosts.js","containers/Users/UserDetail.js","containers/Users/UserEditBasic.js","containers/Users/UserEditAvatar.js","containers/Users/UserCredentials.js","containers/Users/UserAdminSettings.js","containers/Users/UserEdit.js","containers/Auth/Logout.js","containers/App/AppNavbar.js","containers/Admin/AdminPosts.js","containers/Admin/AdminUsers.js","containers/Admin/AdminTopics.js","containers/Admin/AdminCreateTopic.js","containers/Admin/AdminEditTopic.js","containers/Auth/EmailVerify.js","containers/Auth/VerifyInstructions.js","containers/Auth/ForgotPassword.js","containers/Auth/ResetPassword.js","components/Topics/Topic.js","containers/Topics/TopicList.js","containers/App/App.js","hooks/LoginHook.js","index.js"],"names":["axiosInstance","axios","create","baseURL","timeout","headers","Authorization","localStorage","getItem","accept","GetApiRequest","url","useState","data","setData","isLoaded","setIsLoaded","error","setError","useEffect","get","then","response","catch","UserLink","props","to","user","AuthContext","React","createContext","PostCreate","history","useHistory","title","setTitle","description","setDescription","confirm","setConfirm","useContext","authState","setAuthState","userState","setUserState","push","Container","Row","Col","className","md","Card","Body","Form","onSubmit","event","preventDefault","post","text","status","alert","Group","Label","Control","value","onChange","target","as","rows","Check","type","checked","label","Button","PostDetail","postId","useParams","String","message","id","ListGroup","variant","Item","sm","created_date","username","privilege","Spinner","animation","role","PostEdit","isMounted","useRef","current","refreshState","put","onClick","delete","Login","email","setEmail","password","setPassword","result","defaults","setItem","Register","setUsername","loading","setLoading","UserPosts","Header","length","map","item","UserDetail","userName","src","avatar","URL","style","width","height","padding","name","xs","bio","birthday","gender","private","UserEditBasic","setAvatar","setBio","setBirthday","setGender","setName","isPrivate","setPrivate","placeholder","removeItem","UserEditAvatar","preview","setPreview","form_data","FormData","append","editData","File","custom","files","createObjectURL","Image","UserCredentials","UserAdminSettingsBasic","isAdmin","setAdmin","UserEdit","editType","setEditType","Nav","defaultActiveKey","Link","param","renderSwitch","Logout","NavDropdown","evt","AppNavbar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","AdminPosts","AdminTopics","nsfw","AdminCreateTopic","setNsfw","AdminEditTopic","topicId","EmailVerify","challenge","VerifyInstructions","ForgotPassword","success","setSuccess","ResetPassword","Topic","Title","Text","TopicList","App","console","log","LoginHook","Provider","basename","exact","path","AdminRoutes","PostRoutes","UserRoutes","match","useRouteMatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbfcaf44.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"http://localhost:5000/api\",\r\n  timeout: 10000,\r\n  headers: {\r\n    Authorization: \"JWT \" + localStorage.getItem(\"access_token\"),\r\n    \"Content-Type\": \"application/json\",\r\n    accept: \"application/json\",\r\n  },\r\n});\r\nexport default axiosInstance;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axiosInstance from \"../utils/axiosApi\";\r\n\r\nexport default function GetApiRequest(url) {\r\n  const [data, setData] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .get(url)\r\n        .then((response) => {\r\n          \r\n          setData(response.data);\r\n          setIsLoaded(true);\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { error, isLoaded, data };\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function UserLink(props) {\r\n  return <Link to={\"/user/\" + props.user}>{props.user}</Link>;\r\n}\r\n","import React from \"react\";\r\nconst AuthContext = React.createContext();\r\nexport default AuthContext;","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Container, Row, Card, Col, Form, Button } from \"react-bootstrap\";\r\n\r\nexport default function PostCreate() {\r\n  let history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(false);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (title == \"\" || description == \"\" || confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/post\", {\r\n          title: title,\r\n          text: description,\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 201) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  // redirect if not authenticated\r\n  useEffect(() => {\r\n    if (authState == false) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Create Post</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Title</Form.Label>\r\n                      <Form.Control\r\n                        value={title}\r\n                        onChange={(event) => setTitle(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Description</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"9\"\r\n                        value={description}\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={confirm}\r\n                      checked={confirm}\r\n                      onChange={(event) => setConfirm(!confirm)}\r\n                      label={\"Confirm\"}\r\n                    />\r\n                    <br />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroup,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\nexport default function PostDetail(props) {\r\n  let { postId } = useParams();\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\"/post/\" + String(postId));\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // display information about a post\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Viewing Post {data.id}</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col sm=\"2\">\r\n                          <b>Title:</b>\r\n                        </Col>\r\n                        <Col>{data.title}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col sm=\"2\">\r\n                          <b>Description:</b>\r\n                        </Col>\r\n                        <Col>{data.text}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col sm=\"2\">\r\n                          <b>Created at:</b>\r\n                        </Col>\r\n                        <Col>{data.created_date}</Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col sm=\"2\">\r\n                          <b>Author:</b>\r\n                        </Col>\r\n                        <Col>\r\n                          <UserLink user={data.user} />\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Card.Body>\r\n              </Card>\r\n              <br />\r\n              {authState &&\r\n              userState != null &&\r\n              (userState.username == data.user || userState.privilege > 1) ? (\r\n                // if logged in link to the edit page\r\n                <Row>\r\n                  <Col sm=\"2\">\r\n                    <Link to={\"/post/\" + String(postId) + \"/edit\"}>\r\n                      <Button>Edit</Button>\r\n                    </Link>\r\n                  </Col>\r\n                </Row>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\nexport default function PostEdit(props) {\r\n  let { postId } = useParams();\r\n  let history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(false);\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n  const { data, error, isLoaded } = GetApiRequest(\"/post/\" + String(postId));\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      if (data.user != userState.username && userState.privilege <= 1) {\r\n        history.push(\"/\");\r\n      }\r\n      setTitle(data.title);\r\n      setDescription(data.text);\r\n    }\r\n  };\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    refreshState();\r\n  }, [isLoaded]);\r\n\r\n  // handles edit\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (title == \"\" || description == \"\" || confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const editData = () => {\r\n      axiosInstance\r\n        .put(\"/post/\" + String(data.id), {\r\n          title: title,\r\n          text: description,\r\n        })\r\n        .then((response) => {\r\n          // setIsLoaded(true);\r\n          if (response.status == 201) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/post/\" + data.id);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // handles delete\r\n  const handleDelete = () => {\r\n    const deleteData = () => {\r\n      axiosInstance\r\n        .delete(\"/post/\" + String(data.id))\r\n        .then((response) => {\r\n          // setIsLoaded(true);\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/\");\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    deleteData();\r\n  };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Edit Post {data.id}</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Title</Form.Label>\r\n                      <Form.Control\r\n                        value={title}\r\n                        onChange={(event) => setTitle(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Description</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"9\"\r\n                        value={description}\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={confirm}\r\n                      checked={confirm}\r\n                      onChange={(event) => setConfirm(!confirm)}\r\n                      label={\"Confirm\"}\r\n                    />\r\n                    <br />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                  <Button variant=\"warning\" onClick={refreshState}>\r\n                    Reset\r\n                  </Button>\r\n                  <Button variant=\"danger\" onClick={handleDelete}>\r\n                    Delete\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Container, Row, Card, Col, Form, Button } from \"react-bootstrap\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\n\r\nexport default function Login() {\r\n  let history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { authState, setAuthState } = React.useContext(AuthContext);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (email == \"\" || password == \"\") {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/auth/token\", {\r\n          email: email,\r\n          password: password,\r\n        })\r\n        .then((result) => {\r\n          if (result.status == 202) {\r\n            axiosInstance.defaults.headers[\"Authorization\"] =\r\n              \"JWT \" + result.data;\r\n            localStorage.setItem(\"access_token\", result.data);\r\n\r\n            // set global authentication state after a login succeeds, then redirect\r\n            setAuthState(true);\r\n            history.push(\"/\");\r\n          } else {\r\n            alert(result);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status == 401) {\r\n            history.push(\"/verify/instructions\");\r\n          } else {\r\n            alert(error);\r\n          }\r\n        });\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Login</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Email</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Link to=\"/forgotpassword\">Forgot Password</Link>\r\n                    <br />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport Feedback from \"react-bootstrap/esm/Feedback\";\r\n\r\nexport default function Register(props) {\r\n  let history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (\r\n      email == \"\" ||\r\n      password == \"\" ||\r\n      password != confirm ||\r\n      username == \"\"\r\n    ) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/auth/user\", {\r\n          username: username,\r\n          email: email,\r\n          password: password,\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 201) {\r\n            alert(\"success\");\r\n            history.push(\"/verify/instructions\");\r\n          } else {\r\n            alert(response);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n          setLoading(false);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n    setLoading(true);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Register</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Email</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Username</Form.Label>\r\n                      <Form.Control\r\n                        value={username}\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Confirm Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={confirm}\r\n                        onChange={(event) => setConfirm(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                    ) : (\r\n                      <Button type=\"submit\">Submit</Button>\r\n                    )}\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport Post from \"../../components/Posts/Post\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Container, Row, Col, Spinner, Card, ListGroup } from \"react-bootstrap\";\r\n\r\nexport default function UserPosts(props) {\r\n  const user = props.user;\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\"/post/user/\" + user);\r\n\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // render a Post for each item\r\n  return (\r\n    <Card>\r\n      <Card.Header>Posts by {user}</Card.Header>\r\n      <Card.Body>\r\n        {data.length == 0 ? (\r\n          <h4>This user hasn't made any posts yet...</h4>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col sm=\"1\">\r\n                  <b>Id</b>\r\n                </Col>\r\n                <Col sm=\"7\">\r\n                  <b>Title</b>\r\n                </Col>\r\n                <Col sm=\"4\">\r\n                  <b>Date</b>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            {data.map((item) => (\r\n              <ListGroup.Item>\r\n                <Link to={\"/post/\" + item.id}>\r\n                  <Row>\r\n                    <Col sm=\"1\">{item.id}</Col>\r\n                    <Col sm=\"7\">{item.title}</Col>\r\n                    <Col sm=\"4\">{item.created_date}</Col>\r\n                  </Row>\r\n                </Link>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport UserPosts from \"./UserPosts\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  ListGroup,\r\n  Button,\r\n  Spinner,\r\n  Jumbotron,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport default function UserDetail(props) {\r\n  let { userName } = useParams();\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\"/user/\" + String(userName));\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // display information about a post\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col md=\"8\">\r\n          <Row>\r\n            <Col md=\"auto\">\r\n              <img\r\n                src={\r\n                  data.avatar == null\r\n                    ? \"/default_avatar.jpg\"\r\n                    : new URL(\r\n                        data.avatar\r\n                      )\r\n                }\r\n                style={{\r\n                  width: \"120px\",\r\n                  height: \"120px\",\r\n                  padding: \"0px\",\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col md=\"auto\">\r\n              <h1>{data.username}</h1>\r\n              <p>{data.name}</p>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Card>\r\n            <Card.Header>\r\n              <Row className=\"justify-content-between\">\r\n                <Col xs=\"auto\">Information</Col>\r\n                <Col xs=\"auto\">\r\n                  {authState &&\r\n                  userState != null &&\r\n                  (data.username == userState.username ||\r\n                    userState.privilege > 1) ? (\r\n                    <Link to={\"/user/\" + userName + \"/edit\"}>\r\n                      <Button>Edit</Button>\r\n                    </Link>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Username:</b>\r\n                    </Col>\r\n                    <Col>{data.username}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Name:</b>\r\n                    </Col>\r\n                    <Col>{data.name}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Bio:</b>\r\n                    </Col>\r\n                    <Col>{data.bio}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Birthday:</b>\r\n                    </Col>\r\n                    <Col>{data.birthday}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col sm=\"2\">\r\n                      <b>Gender:</b>\r\n                    </Col>\r\n                    <Col>{data.gender}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card.Body>\r\n          </Card>\r\n          <br />\r\n\r\n          {data.private ? (\r\n            <h1>This account's posts are private</h1>\r\n          ) : (\r\n            <UserPosts user={data.username} />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\nexport default function UserEditBasic(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [birthday, setBirthday] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [isPrivate, setPrivate] = useState(false);\r\n\r\n  const [confirm, setConfirm] = useState(false);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const { data, error, isLoaded } = GetApiRequest(\"/user/\" + String(userName));\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      setAvatar(data.avatar);\r\n      setBio(data.bio);\r\n      setBirthday(data.birthday);\r\n      setGender(data.gender);\r\n      setName(data.name);\r\n      setPrivate(data.private);\r\n    }\r\n  };\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    refreshState();\r\n  }, [isLoaded]);\r\n\r\n  // handles edit\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (bio == \"\" || name == \"\" || confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n    const editData = () => {\r\n      axiosInstance\r\n        .put(\"/user/\" + userName, {\r\n          username: userName,\r\n          name: name,\r\n          bio: bio,\r\n          gender: gender,\r\n          private: isPrivate,\r\n          birthday: String(birthday),\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/user/\" + data.username);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // handles delete\r\n  const handleDelete = () => {\r\n    const deleteData = () => {\r\n      axiosInstance\r\n        .delete(\"/user/\" + userName)\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            localStorage.removeItem(\"access_token\");\r\n            setAuthState(false);\r\n            setUserState(null);\r\n            alert(\"account deleted\");\r\n            history.push(\"/\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    deleteData();\r\n  };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <h2>Edit Profile</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={(event) => handleSubmit(event)}>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              value={name}\r\n              onChange={(event) => setName(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Label>Bio</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"9\"\r\n              value={bio}\r\n              onChange={(event) => setBio(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Label>Gender</Form.Label>\r\n            <Form.Control\r\n              value={gender}\r\n              onChange={(event) => setGender(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              value={isPrivate}\r\n              checked={isPrivate}\r\n              onChange={(event) => setPrivate(!isPrivate)}\r\n              label={\"Private\"}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Group>\r\n            <Form.Label>Birthday</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              placeholder=\"Date of Birth\"\r\n              value={birthday}\r\n              onChange={(event) => setBirthday(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <br />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            value={confirm}\r\n            checked={confirm}\r\n            onChange={(event) => setConfirm(!confirm)}\r\n            label={\"Confirm\"}\r\n          />\r\n          <br />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n        <Button variant=\"warning\" onClick={refreshState}>\r\n          Clear Changes\r\n        </Button>\r\n        <br />\r\n        <Button variant=\"danger\" onClick={handleDelete}>\r\n          Delete Account\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\nexport default function UserEditAvatar(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [preview, setPreview] = useState(\"\");\r\n\r\n  const { data, error, isLoaded } = GetApiRequest(\"/user/\" + String(userName));\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  //   used to refresh state\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      setAvatar(data.avatar);\r\n    }\r\n  };\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    refreshState();\r\n  }, [isLoaded]);\r\n\r\n  // handles upload\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (avatar == \"\") {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n    const editData = () => {\r\n      let form_data = new FormData();\r\n      form_data.append(\"file\", avatar);\r\n      form_data.append(\"filename\", avatar.name);\r\n      axiosInstance\r\n        .post(\"/upload/avatar/\" + userName, form_data)\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/user/\" + data.username);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <h2>Edit Avatar</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={(event) => handleSubmit(event)}>\r\n          <Form>\r\n            <Form.File\r\n              id=\"custom-file\"\r\n              label=\"Upload a new avatar\"\r\n              custom\r\n              onChange={(event) => {\r\n                setAvatar(event.target.files[0]);\r\n                setPreview(URL.createObjectURL(event.target.files[0]));\r\n              }}\r\n            />\r\n          </Form>\r\n          <Image\r\n            src={preview}\r\n            style={{\r\n              width: \"120px\",\r\n              height: \"120px\",\r\n              padding: \"0px\",\r\n            }}\r\n          />\r\n          <br />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n  ListGroup\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\nexport default function UserCredentials(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n\r\n  const { data, error, isLoaded } = GetApiRequest(\"/auth/user/\"+userName);\r\n  //   const isMounted = useRef(1);\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <h2>Edit Credentials</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item>\r\n            <Row>\r\n              <Col sm=\"3\">\r\n                <b>Username:</b>\r\n              </Col>\r\n              <Col>{data.username}</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n\r\n          <ListGroup.Item>\r\n            <Row>\r\n              <Col sm=\"3\">\r\n                <b>Email:</b>\r\n              </Col>\r\n              <Col>{data.email}</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            <Row>\r\n              <Col sm=\"3\">\r\n                <b>Privilege:</b>\r\n              </Col>\r\n              <Col>{ + data.privilege}</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n        <Link to=\"/forgotpassword\">Reset Password</Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\n\r\nexport default function UserAdminSettingsBasic(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n  const [isAdmin, setAdmin] = useState(false);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const { data, error, isLoaded } = GetApiRequest(\"/auth/user/\" + userName);\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      setAdmin(data.privilege > 1);\r\n    }\r\n  };\r\n\r\n  // set initial state when data loads\r\n  useEffect(() => {\r\n    refreshState();\r\n  }, [isLoaded]);\r\n\r\n  // handles edit\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const editData = () => {\r\n      axiosInstance\r\n        .put(\"auth/user/privilege/\" + userName, {\r\n          privilege: isAdmin ? 2 : 1,\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/user/\" + data.username);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    editData();\r\n  };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <h2>Edit Profile</h2>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={(event) => handleSubmit(event)}>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            value={isAdmin}\r\n            checked={isAdmin}\r\n            onChange={(event) => setAdmin(!isAdmin)}\r\n            label={\"Administrator\"}\r\n          />\r\n          <br />\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n        <Button variant=\"warning\" onClick={refreshState}>\r\n          Clear Changes\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport UserEditBasic from \"./UserEditBasic\";\r\nimport UserEditAvatar from \"./UserEditAvatar\";\r\nimport UserCredentials from \"./UserCredentials\";\r\nimport UserAdminSettings from \"./UserAdminSettings\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  ListGroup,\r\n  Button,\r\n  Spinner,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function UserEdit(props) {\r\n  let { userName } = useParams();\r\n  let history = useHistory();\r\n  const { authState, userState } = React.useContext(AuthContext);\r\n\r\n  let [editType, setEditType] = useState(1);\r\n\r\n  function renderSwitch(param) {\r\n    switch (editType) {\r\n      case 1:\r\n        return <UserEditBasic />;\r\n      case 2:\r\n        return <UserCredentials />;\r\n      case 3:\r\n        return <UserEditAvatar />;\r\n      case 4:\r\n        return <UserAdminSettings />;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !authState ||\r\n      userState == null ||\r\n      (userName != userState.username && userState.privilege <= 1)\r\n    ) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <Row>\r\n                <Col md=\"2\">\r\n                  <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n                    <Nav.Link onClick={() => setEditType(1)}>Profile</Nav.Link>\r\n                    <Nav.Link onClick={() => setEditType(2)}>\r\n                      Credentials\r\n                    </Nav.Link>\r\n                    <Nav.Link onClick={() => setEditType(3)}>Avatar</Nav.Link>\r\n                    {userState != null && userState.privilege > 1 ? (\r\n                      <Nav.Link onClick={() => setEditType(4)}>Admin</Nav.Link>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </Nav>\r\n                </Col>\r\n                <Col>{renderSwitch(editType)}</Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {NavDropdown} from \"react-bootstrap\";\r\nexport default function Logout() {\r\n  const history = useHistory();\r\n  const { authState, setAuthState, userState, setUserState } = React.useContext(\r\n    AuthContext\r\n  );\r\n  const handleSubmit = (evt) => {\r\n    const logout = () => {\r\n      axiosInstance\r\n        .delete(\"/auth/token\")\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            // remode local token and reset auth contexts if logout succeeds\r\n            localStorage.removeItem(\"access_token\");\r\n            setAuthState(false);\r\n            setUserState(null);\r\n            alert(\"logged out\");\r\n            history.push(\"/\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    logout();\r\n  };\r\n\r\n  return <NavDropdown.Item onClick={handleSubmit}>Logout</NavDropdown.Item>;\r\n}\r\n","// navbar component\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\n\r\nimport Logout from \"../Auth/Logout\";\r\n\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\n\r\nexport default function AppNavbar() {\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" style={{ padding: \"5px\" }}>\r\n      <Navbar.Brand href=\"/\">Web Template</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse\r\n        id=\"responsive-navbar-nav\"\r\n        className=\"justify-content-between\"\r\n      >\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link>\r\n            <Link to=\"/\">Home</Link>\r\n          </Nav.Link>\r\n          {/* check if user is logged in, if so allow them to create a new post */}\r\n          {authState && userState != null ? (\r\n            <Nav.Link>\r\n              <Link to=\"/create\">Create</Link>\r\n            </Nav.Link>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Nav>\r\n        <Nav>\r\n          {/* login controls */}\r\n          {authState && userState != null ? (\r\n            <NavDropdown\r\n              title={userState.username}\r\n              id=\"collasible-nav-dropdown\"\r\n            >\r\n              <NavDropdown.Item>\r\n                <UserLink user={userState.username} />\r\n              </NavDropdown.Item>\r\n\r\n              {/* admin controls */}\r\n              {userState.privilege > 1 ? (\r\n                <Fragment>\r\n                  <NavDropdown.Item>\r\n                    <Link to=\"/admin/posts\">Posts</Link>\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item>\r\n                    <Link to=\"/admin/users\">Users</Link>\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item>\r\n                    <Link to=\"/admin/topics\">Topics</Link>\r\n                  </NavDropdown.Item>\r\n                </Fragment>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Logout />\r\n            </NavDropdown>\r\n          ) : (\r\n            <Fragment>\r\n              <Nav.Link>\r\n                <Link to=\"/login\">Login</Link>\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                <Link to=\"/register\">Register</Link>\r\n              </Nav.Link>\r\n            </Fragment>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","// admin only list of all posts\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { Container, Row, Card, Col, Spinner, ListGroup } from \"react-bootstrap\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\n\r\nexport default function AdminPosts(props) {\r\n  let history = useHistory();\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const isMounted = useRef(1);\r\n\r\n  // get posts from api\r\n  const { data, error, isLoaded } = GetApiRequest(\"/post\");\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null || userState.privilege <= 1) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Admin Posts</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  {data.length == 0 ? (\r\n                    <h4>This user hasn't made any posts yet...</h4>\r\n                  ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col sm=\"1\">\r\n                            <b>Id</b>\r\n                          </Col>\r\n                          <Col sm=\"4\">\r\n                            <b>Title</b>\r\n                          </Col>\r\n                          <Col sm=\"5\">\r\n                            <b>Date</b>\r\n                          </Col>\r\n                          <Col sm=\"2\">\r\n                            <b>User</b>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      {data.map((item) => (\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col sm=\"1\">{item.id}</Col>\r\n                            <Col sm=\"4\">\r\n                              <Link to={\"/post/\" + item.id}>{item.title}</Link>\r\n                            </Col>\r\n                            <Col sm=\"5\">{item.created_date}</Col>\r\n                            <Col sm=\"2\">\r\n                              <UserLink user={item.user} />\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","// admin only list of all registered users\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { Container, Row, Card, Col, Spinner, ListGroup } from \"react-bootstrap\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\n\r\nexport default function AdminPosts(props) {\r\n  let history = useHistory();\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const isMounted = useRef(1);\r\n\r\n  // get all users from api\r\n  const { data, error, isLoaded } = GetApiRequest(\"/user\");\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null || userState.privilege <= 1) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n  \r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Admin Users</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  {data.length == 0 ? (\r\n                    <h4>This user hasn't made any posts yet...</h4>\r\n                  ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col sm=\"3\">\r\n                            <b>Username</b>\r\n                          </Col>\r\n                          <Col sm=\"3\">\r\n                            <b>Name</b>\r\n                          </Col>\r\n                          <Col sm=\"3\">\r\n                            <b>Birthday</b>\r\n                          </Col>\r\n                          <Col sm=\"3\">\r\n                            <b>Gender</b>\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      {data.map((item) => (\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col sm=\"3\">\r\n                              <UserLink user={item.username} />\r\n                            </Col>\r\n                            <Col sm=\"3\">{item.name}</Col>\r\n                            <Col sm=\"3\">{item.gender}</Col>\r\n                            <Col sm=\"3\">{item.birthday}</Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","// admin only list of all posts\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { Container, Row, Card, Col, Spinner, ListGroup } from \"react-bootstrap\";\r\nimport UserLink from \"../../components/Users/UserLink\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function AdminTopics(props) {\r\n  let history = useHistory();\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const isMounted = useRef(1);\r\n\r\n  // get posts from api\r\n  const { data, error, isLoaded } = GetApiRequest(\"/topic\");\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null || userState.privilege <= 1) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Admin Topics</h1>\r\n              <Link to=\"/admin/topics/create\"><Button>Add</Button></Link>\r\n              <br/>\r\n              <Card>\r\n                <Card.Body>\r\n                  {data.length == 0 ? (\r\n                    <h4>There are currently no topics</h4>\r\n                  ) : (\r\n                    <ListGroup variant=\"flush\">\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col sm=\"4\">\r\n                            <b>Name</b>\r\n                          </Col>\r\n                          <Col sm=\"4\">\r\n                            <b>Description</b>\r\n                          </Col>\r\n                          <Col sm=\"2\">\r\n                            <b>NSFW</b>\r\n                          </Col>\r\n                          <Col sm=\"1\">\r\n                            <b>Id</b>\r\n                          </Col>\r\n                          <Col sm=\"1\">\r\n                            \r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      {data.map((item) => (\r\n                        <ListGroup.Item>\r\n                          <Row>\r\n                            <Col sm=\"4\">{item.name}</Col>\r\n                            <Col sm=\"4\">{item.description}</Col>\r\n                            <Col sm=\"2\">{String(item.nsfw)}</Col>\r\n                            <Col sm=\"1\">{item.id}</Col>\r\n                            <Col sm=\"1\"><Link to={\"/admin/topics/edit/\"+item.id}><Button>Edit</Button></Link></Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Container, Row, Card, Col, Form, Button } from \"react-bootstrap\";\r\n\r\nexport default function AdminCreateTopic() {\r\n  let history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [nsfw, setNsfw] = useState(false);\r\n  const { authState, setAuthState, userState, setUserState } =\r\n    React.useContext(AuthContext);\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (name == \"\" || description == \"\" || confirm == false) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/topic\", {\r\n          name: name,\r\n          description: description,\r\n          nsfw: nsfw\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 201) {\r\n            alert(\"success\");\r\n          } else {\r\n            alert(\"fail\");\r\n          }\r\n          history.push(\"/admin/topics\");\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n        });\r\n    };\r\n    fetchData();\r\n  };\r\n\r\n  // redirect if not authenticated\r\n  useEffect(() => {\r\n    if (!authState || userState == null || userState.privilege <= 1) {\r\n      history.push(\"/\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Admin Create Topic</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Topic Name</Form.Label>\r\n                      <Form.Control\r\n                        value={name}\r\n                        onChange={(event) => setName(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Description</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"9\"\r\n                        value={description}\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={nsfw}\r\n                      checked={nsfw}\r\n                      onChange={(event) => setNsfw(!nsfw)}\r\n                      label={\"NSFW\"}\r\n                    />\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={confirm}\r\n                      checked={confirm}\r\n                      onChange={(event) => setConfirm(!confirm)}\r\n                      label={\"Confirm\"}\r\n                    />\r\n\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\nexport default function AdminEditTopic(props) {\r\n  let { topicId } = useParams();\r\n  let history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [nsfw, setNsfw] = useState(false);\r\n  const { authState, setAuthState, userState } = React.useContext(AuthContext);\r\n  const { data, error, isLoaded } = GetApiRequest(\"/topic/\" + String(topicId));\r\n  const isMounted = useRef(1);\r\n\r\n  // component did mount\r\n  useEffect(() => {\r\n    isMounted.current = 1;\r\n    if (!authState || userState == null || userState.privilege <= 1) {\r\n      history.push(\"/\");\r\n    }\r\n    return () => {\r\n      isMounted.current = 0;\r\n    };\r\n  });\r\n\r\n  const refreshState = () => {\r\n    if (isLoaded && isMounted) {\r\n      if (data.user != userState.username && userState.privilege <= 1) {\r\n        history.push(\"/\");\r\n      }\r\n      setName(data.name);\r\n      setDescription(data.description);\r\n      setNsfw(data.nsfw);\r\n    }\r\n  };\r\n\r\n    // set initial state when data loads\r\n    useEffect(() => {\r\n      refreshState();\r\n    }, [isLoaded]);\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        if (name == \"\" || description == \"\" || confirm == false) {\r\n          alert(\"please do not leave any fields blank\");\r\n          return;\r\n        }\r\n    \r\n        const editData = () => {\r\n          axiosInstance\r\n            .put(\"/topic/\"+data.id, {\r\n              name: name,\r\n              description: description,\r\n              nsfw: nsfw\r\n            })\r\n            .then((response) => {\r\n              if (response.status == 201) {\r\n                alert(\"success\");\r\n              } else {\r\n                alert(\"fail\");\r\n              }\r\n              history.push(\"/\");\r\n            })\r\n            .catch((error) => {\r\n              alert(error);\r\n            });\r\n        };\r\n        editData();\r\n      };\r\n\r\n    // handles delete\r\n    const handleDelete = () => {\r\n      const deleteData = () => {\r\n        axiosInstance\r\n          .delete(\"/topic/\" + data.id)\r\n          .then((response) => {\r\n            if (response.status == 200) {\r\n              alert(\"success\");\r\n            } else {\r\n              alert(\"fail\");\r\n            }\r\n            history.push(\"/admin/topics\");\r\n          })\r\n          .catch((error) => {\r\n            alert(error);\r\n          });\r\n      };\r\n      deleteData();\r\n    };\r\n\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Edit Topic {data.id}</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                  <Form.Group>\r\n                      <Form.Label>Topic Name</Form.Label>\r\n                      <Form.Control\r\n                        value={name}\r\n                        onChange={(event) => setName(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Description</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows=\"9\"\r\n                        value={description}\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={nsfw}\r\n                      checked={nsfw}\r\n                      onChange={(event) => setNsfw(!nsfw)}\r\n                      label={\"NSFW\"}\r\n                    />\r\n                    <br />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      value={confirm}\r\n                      checked={confirm}\r\n                      onChange={(event) => setConfirm(!confirm)}\r\n                      label={\"Confirm\"}\r\n                    />\r\n                    <Button type=\"submit\">Submit</Button>\r\n                  </Form>\r\n                  <Button variant=\"warning\" onClick={refreshState}>\r\n                    Reset\r\n                  </Button>\r\n                  <Button variant=\"danger\" onClick={handleDelete}>\r\n                    Delete\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","// the page linked in a verification email\r\nimport React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Spinner,\r\n  Form,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport default function EmailVerify(props) {\r\n  let { challenge } = useParams();\r\n\r\n  // verify email with the current route\r\n  const { data, error, isLoaded } = GetApiRequest(\"/auth/verify/\" + challenge);\r\n\r\n  if (error !== null) {\r\n    return <div>Verification failed: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Success</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  Your email has been sucesfully verified, you may log in\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport { Container, Row, Card, Col, Spinner } from \"react-bootstrap\";\r\nexport default function VerifyInstructions() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Verification Required</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  A verification link has been sent to the email you signed up\r\n                  with, check your inbox.\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","// used to send a password reset email\r\nimport React, { useState } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function ForgotPassword() {\r\n  let history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (email == \"\") {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/auth/requestreset\", {\r\n          email: email,\r\n        })\r\n        .then((result) => {\r\n          if (result.status == 200) {\r\n            setSuccess(true);\r\n          } else {\r\n            alert(result);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status == 401) {\r\n            history.push(\"/verify/instructions\");\r\n          } else {\r\n            alert(error);\r\n          }\r\n          setLoading(false);\r\n        });\r\n    };\r\n    fetchData();\r\n    setLoading(true);\r\n  };\r\n\r\n  if (success) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col md=\"8\">\r\n                <h1>Reset Request Sent</h1>\r\n                <Card>\r\n                  <Card.Body>\r\n                    A password reset link has been sent to the email you signed\r\n                    up with, check your inbox.\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Forgot Password</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Enter your email</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(event) => setEmail(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                    ) : (\r\n                      <Button type=\"submit\">Submit</Button>\r\n                    )}\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axiosInstance from \"../../utils/axiosApi\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function ResetPassword(props) {\r\n  let { challenge } = useParams();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (password == \"\" || password != confirm) {\r\n      alert(\"please do not leave any fields blank\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .post(\"/auth/reset/\" + challenge, {\r\n          password: password,\r\n        })\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            setSuccess(true);\r\n          } else {\r\n            alert(response);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          alert(error);\r\n          setLoading(false);\r\n        });\r\n    };\r\n    fetchData();\r\n    setLoading(true);\r\n  };\r\n  if (success) {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Row className=\"justify-content-md-center\">\r\n              <Col md=\"8\">\r\n                <h1>Reset Succeeded</h1>\r\n                <Card>\r\n                  <Card.Body>\r\n                    Your Password has been changed, you may now log in.\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Reset Password</h1>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Form onSubmit={(event) => handleSubmit(event)}>\r\n                    <Form.Group>\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Form.Group>\r\n                      <Form.Label>Confirm Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        value={confirm}\r\n                        onChange={(event) => setConfirm(event.target.value)}\r\n                      />\r\n                    </Form.Group>\r\n                    <br />\r\n                    {loading ? (\r\n                      <Spinner animation=\"border\" role=\"status\"></Spinner>\r\n                    ) : (\r\n                      <Button type=\"submit\">Submit</Button>\r\n                    )}\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Badge } from \"react-bootstrap\";\r\nimport UserLink from \"../Users/UserLink\";\r\nimport { data } from \"jquery\";\r\n\r\nexport default function Topic(props) {\r\n  return (\r\n    <Card>\r\n      <Link to={\"/topic/\" + props.data.id}>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            {props.data.name} {props.data.nsfw ? \"(NSFW)\" : \"\"}\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <i>{props.data.description}</i>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Link>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport GetApiRequest from \"../../hooks/GetApiRequest\";\r\nimport Topic from \"../../components/Topics/Topic\";\r\nimport { Container, Row, Col, Spinner, Card } from \"react-bootstrap\";\r\n\r\nexport default function TopicList() {\r\n  // get posts using our GET api hook\r\n  const { data, error, isLoaded } = GetApiRequest(\"/topic\");\r\n\r\n  // check errors\r\n  if (error !== null) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  // wait for load\r\n  if (!isLoaded) {\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\"></span>\r\n      </Spinner>\r\n    );\r\n  }\r\n  // render a Post for each item\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"8\">\r\n              <h1>Welcome to Jorum</h1>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Card.Title>Topics</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  {data.map((item) => (\r\n                    <Row className=\"justify-content-center\">\r\n                      <Col>\r\n                        <Topic data={item} />\r\n                      </Col>\r\n                    </Row>\r\n                  ))}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\n\r\nimport PostList from \"../Posts/PostList\";\r\nimport PostCreate from \"../Posts/PostCreate\";\r\nimport PostDetail from \"../Posts/PostDetail\";\r\nimport PostEdit from \"../Posts/PostEdit\";\r\nimport Login from \"../Auth/Login\";\r\nimport Register from \"../Auth/Register\";\r\nimport UserDetail from \"../Users/UserDetail\";\r\nimport UserEdit from \"../Users/UserEdit\";\r\nimport AppNavbar from \"./AppNavbar\";\r\nimport LoginHook from \"../../hooks/LoginHook\";\r\nimport AdminPosts from \"../Admin/AdminPosts\";\r\nimport AdminUsers from \"../Admin/AdminUsers\";\r\nimport AdminTopics from \"../Admin/AdminTopics\";\r\nimport AdminCreateTopic from \"../Admin/AdminCreateTopic\";\r\nimport AdminEditTopic from \"../Admin/AdminEditTopic\";\r\nimport EmailVerify from \"../Auth/EmailVerify\";\r\nimport VerifyInstructions from \"../Auth/VerifyInstructions\";\r\n\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport ForgotPassword from \"../Auth/ForgotPassword\";\r\nimport ResetPassword from \"../Auth/ResetPassword\";\r\nimport TopicList from \"../Topics/TopicList\";\r\n\r\nexport default function App() {\r\n  const [authState, setAuthState] = useState(false);\r\n  const [userState, setUserState] = useState(null);\r\n\r\n  // check if a token exists in memory, if so log in\r\n  LoginHook(authState, setAuthState, userState, setUserState);\r\n\r\n  return (\r\n    // set up contexts\r\n    <AuthContext.Provider\r\n      value={{ authState, setAuthState, userState, setUserState }}\r\n    >\r\n      {/* routes */}\r\n      <Router basename=\"/\">\r\n        <AppNavbar />\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <TopicList/>\r\n            </Route>\r\n            <Route path=\"/reset/:challenge\">\r\n              <ResetPassword />\r\n            </Route>\r\n            <Route path=\"/verify/instructions\">\r\n              <VerifyInstructions />\r\n            </Route>\r\n            <Route path=\"/verify/confirm/:challenge\">\r\n              <EmailVerify />\r\n            </Route>\r\n            <Route path=\"/admin\">\r\n              <AdminRoutes />\r\n            </Route>\r\n            <Route path=\"/post\">\r\n              <PostRoutes />\r\n            </Route>\r\n            <Route path=\"/user\">\r\n              <UserRoutes />\r\n            </Route>\r\n            <Route path=\"/create\">\r\n              <PostCreate />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <Register />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/forgotpassword\">\r\n              <ForgotPassword />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n// sub routes for posts\r\nfunction PostRoutes() {\r\n  let match = useRouteMatch();\r\n  let { id } = useParams();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/:postId/edit`}>\r\n        <PostEdit />\r\n      </Route>\r\n      <Route path={`${match.path}/:postId`}>\r\n        <PostDetail />\r\n      </Route>\r\n\r\n      <Route path={match.path}></Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n// sub routes for users\r\nfunction UserRoutes() {\r\n  let match = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/:userName/edit`}>\r\n        <UserEdit />\r\n      </Route>\r\n      <Route path={`${match.path}/:userName`}>\r\n        <UserDetail />\r\n      </Route>\r\n      <Route path={match.path}>g</Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n// sub routes for admins\r\nfunction AdminRoutes() {\r\n  let match = useRouteMatch();\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.path}/posts`}>\r\n        <AdminPosts />\r\n      </Route>\r\n      <Route path={`${match.path}/users`}>\r\n        <AdminUsers />\r\n      </Route>\r\n      <Route path={`${match.path}/topics/create`}>\r\n        <AdminCreateTopic />\r\n      </Route>\r\n      <Route path={`${match.path}/topics/edit/:topicId`}>\r\n        <AdminEditTopic />\r\n      </Route>\r\n      <Route path={`${match.path}/topics`}>\r\n        <AdminTopics />\r\n      </Route>\r\n      \r\n      <Route path={match.path}>g</Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport axiosInstance from \"../utils/axiosApi\";\r\n\r\nexport default function TryLogin(authState, setAuthState, userState, setUserState) {\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      axiosInstance\r\n        .get(\"/auth/user\")\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            setAuthState(true);\r\n            setUserState(response.data);\r\n            console.log(response.data)\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setError(error);\r\n        });\r\n    };\r\n    if (localStorage.getItem(\"access_token\") === null || (authState == true && userState!=null)) {\r\n      return;\r\n    }\r\n    fetchData();\r\n  }, [authState, userState]);\r\n\r\n  return [error];\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/index.css';\r\nimport App from './containers/App/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}